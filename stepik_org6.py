total = 0
for i in range(1, 6):
    total += i
    print(total, end='')  # 1361015

# На вход программе подаются два целых числа a и b(a ≤ b). Программа подсчитывает
# количество чисел в диапазоне от a до b (включительно), куб которых оканчивается на 4 или 9.
a = int(input())
b = int(input())
counter = 0
for i in range(a, b + 1):
    if i ** 3 % 10 == 4 or i ** 3 % 10 == 9:
        counter = counter + 1
print(counter)

a = int(input())
b = int(input())
count = 0
for i in range(a, b + 1):
    if i % 10 == 4 or i % 10 == 9:
        count += 1
print(count)

from math import pow  # Импорт функции возведения в степень
a, b = int(input()), int(input())  # Ввод данных
counter = 0  # Установка значения счетчика
for i in range(a, b + 1):  # Создания цикла с итерациями от a до b+1
    if pow(i, 3) % 10 == 4 or pow(i, 3) % 10 == 9:  # Проверка условия
        counter += 1  # Подсчет значений если условие True
print(counter)  # Вывод результатов

# На вход программе подаются натуральное число n, а затем n целых чисел, каждое на отдельной строке.
# Напишите программу, которая подсчитывает сумму введённых чисел (не включая само число n).
total = 0  # создаем счетчик с изначальным значением 0
n = int(input())  # создаем переменную n
for _ in range(n):  # указываем программе сколько раз должен повторяться цикл
    num = int(input())  # num переменная для ввода чисел
    total = total + num  # увеличиваем счетчик на значение num
print(total)  # выводим итоговое значение

# На вход программе подаётся натуральное число n. Напишите программу, которая вычисляет
# значение выражения (1 + 1/2 + 1/3 +...+ 1/n) - ln(n)
import math
n = int(input())
counter = 0
for i in range(1, n + 1):  # цикл в промежутке от 1 до заданного значения n.
    counter = counter + 1 / i  # счетчик переменной прибавляет дробь согласно количеству итераций до n.
result = counter - math.log(n)
print(result)

# На вход программе подаётся натуральное число n. Программа подсчитывает сумму
# тех чисел от 1 до n (включительно), квадрат которых оканчивается на 2,5 или 8.
n = int(input())
count = 0
for i in range(1, n + 1):
    # Проверяем последние цифры квадратов: 2, 5, 8
    # На самом деле квадраты чисел никогда не оканчиваются на 2 или 8
    # Поэтому слагаемые для этих цифр всегда будут 0, останется только 5
    if (i ** 2) % 10 in (2, 5, 8):  # проверяем принадлежность множеству
        count += i
print(count)

# На вход программе подаётся натуральное число n. Напишите программу, которая вычисляет n!(факториал).
n = int(input())
res = 1
for i in range(1, n + 1):
    res *= i
print(res)

# Напишите программу, которая считывает 10 чисел и выводит произведение отличных от нуля чисел.
count = 1
for _ in range(10):
    num = int(input())
    if num != 0:
        count *= num
print(count)

count = 1
has_nonzero = False  # флаг, что есть хотя бы одно ненулевое число
for _ in range(10):
    num = int(input())
    if num != 0:
        count *= num
        has_nonzero = True  # отметили, что ненулевое число есть
# Если ни одного ненулевого числа не было, можно вывести 0
if has_nonzero:
    print(count)
else:
    print(0)

# На вход программе подаётся натуральное число n. Напишите программу, которая вычисляет сумму
# всех его делителей.
count = 0
n = int(input())
for i in range(1, n + 1):
    if n % i == 0:
        count = count + i
print(count)

# На вход программе подаётся натуральное число n. Напишите программу вычисления знакочередующейся суммы:
# 1 - 2 + 3 - 4 + 5 - 6 +....+ (-1)**(n + 1) * n.
n = int(input())
count = 0
for i in range(1, n + 1):  # количество итераций от 1 до n включительно.
    if i % 2 != 0:  # если остаток от деления переменной цикла на 2 не равен 0
        count += i
    else:           # если остаток от деления переменной цикла на 2 равен 0
        count -= i
print(count)

# На вход программе подаются натуральное число n(n≥2), а затем n различных натуральных чисел
# последовательности, каждое на отдельной строке. Напишите программу, которая выводит наибольшее
# и второе наибольшее число последовательности.
largest = 0
count = 0
n = int(input())
for _ in range(1, n + 1):
    num = int(input())
    if num > largest:
        count = largest
        largest = num
    elif num > count:
        count = num
print(largest)
print(count)

n = int(input())   # вводится число членов дальнейшей последовательности
largest = n   # n идёт в начале всей последовательности и до введения следующих является наибольшим
previous_largest = 0   # предыдущее не вводилось, примем за 0 до переприсвоения

for _ in range(n):   # начинаем цикл записи остальных чисел, их сравнивания и переприсвоения
    num = int(input())
    if num > largest:    # если введённое число больше largest (самое первое largest = n)
        previous_largest = largest    # прошлое самое большое становится предыдущим наибольшим
        largest = num   # а данное введённое становится наибольшим пока не введут следующие
    elif previous_largest < num < largest:   # если введенное число больше предыдущего наибольшего,
        # но меньше наибольшего
        previous_largest = num   # оно вытесняет пред наибольшее и само становится им.
    else:    # num < previous_largest: если введённое число меньше предыдущего наиб, ничего не изменится
        num = num
print(largest)
print(previous_largest)

n = int(input())
a = 0
b = 0
for i in range(n):
    num = int(input())
    if num > a:
        b = a
        a = num
    elif b < num < a:
        b = num
print(a)
print(b)

# Напишите программу, которая считывает последовательность из 10 целых чисел и определяет,
# является ли каждое из них чётным или нет
count = 0
for i in range(10):
    num = int(input())
    if num % 2 == 0:
        count = count + 1
if count == 10:
    a = 'YES'
else:
    a = 'NO'
print(a)

flag = 'YES'
for _ in range(10):
    n = int(input())
    if n % 2 == 1:
        flag = 'NO'
print(flag)

# Напишите программу, которая считывает натуральное число n и выводит
# первые n чисел последовательности Фибоначчи.
a = 1  # так как начальное число n > 1, то счетчики переменной цикла начинаются от 1
b = 1
n = int(input())
if n >= 1:
    print(a, end=' ')
if n >= 2:
    print(b, end=' ')
for _ in range(2, n):  # цикл выполняется с третьего числа
    c = a + b  # В каждой итерации вычисляется следующее число (c = a + b) как сумма двух предыдущих
    a = b  # Значения a и b обновляются: a становится старым b, а b становится новым c,
    b = c  # чтобы подготовиться к следующей итерации.
    print(c, end=' ')

a = 1  # так как начальное число n > 1, то счетчики переменной цикла начинаются от 1
b = 1
n = int(input())
for _ in range(n):
    a, b = b, a + b
    print(a, end=' ')

