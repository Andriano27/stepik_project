s = 'I learn Python language. Python - awesome!'
print(s.find('Python'))

s = input()
c = s[::-1]
print(s + c)

s = input()
print(s[::2])

s = "hello world python"
s = s[:5] + '_' + s[6:11] + '_' + s[12:]
print(s)

s1 = 'a'
s2 = s1.upper()
print(s1, s2)

# На вход программе подаётся строка, состоящая из имени и фамилии человека, разделённых одним пробелом.
# Напишите программу, которая проверяет, что имя и фамилия начинаются с заглавной буквы.
s = input()
c = s.title()
if s == c:
    print('YES')
else:
    print('NO')

s = input()
name = s[0:s.find(' ')]      # Находим имя (оно до пробела)
surname = s[s.find(' ')+1:]  # Находим фамилию (после пробела)
s2 = surname.capitalize()    # Создаем строку, в которой фамилия начинается с заглавной буквы
s3 = name.capitalize()       # Создаем строку, в которой имя начинается с заглавной буквы
if s3 == name and s2 == surname:  # Сравниваем, одинаковы ли строки
    print('YES')
else:
    print('NO')

# На вход программе подаётся строка текста. Напишите программу, которая определяет,
# является ли оттенок текста хорошим или нет. Текст имеет хороший оттенок,
# если содержит подстроку «хорош» (без кавычек) во всевозможных регистрах.
s = input()
c = s.lower()
if 'хорош' in c:
    print('YES')
else:
    print('NO')

# На вход программе подаётся строка. Напишите программу, которая подсчитывает количество буквенных
# символов в нижнем регистре.
s = input()
count = 0
for i in range(len(s)):
    if s[i] in 'abcdefghijklmnopqrstuvwxyz':
        count += 1
print(count)

s, counter = input(), 0
for i in s:
    if i != i.upper():  # условие выполняется только для букв в нижнем регистре
        counter += 1
print(counter)

x = input()
y = x.lower()
total = 0
for i in x:
    if i in y and i not in '0123456789':
        total += 1
print(total)

# На вход программе подаётся строка текста, состоящая из слов, разделённых ровно одним пробелом.
# Напишите программу, которая подсчитывает количество слов в ней.
s = input()
st = s.count(' ')
print(st + 1)

s, total = input(), 0
s = s.strip()
for i in range(len(s)):
    if s[i] == ' ':
        total += 1
print(total + 1)

# На вход программе подаётся строка генетического кода, состоящая из букв А (аденин), Г (гуанин),
# Ц (цитозин) и Т (тимин). Напишите программу, которая подсчитывает сколько аденина, гуанина,
# цитозина и тимина входит в данную строку генетического кода.
s = input()
st = s.lower()
print("Аденин:", st.count('а'))
print("Гуанин:", st.count('г'))
print("Цитозин:", st.count('ц'))
print("Тимин:", st.count('т'))

s = input().upper()
for c in ('Аденин:', 'Гуанин:', 'Цитозин:', 'Тимин:'):
    print(c, s.count(c[0]))

x = input().lower().count
print(f"Аденин: {x('а')}\nГуанин: {x('г')}\nЦитозин: {x('ц')}\nТимин: {x('т')}")

s = input().upper()
for word in ('Аденин', 'Гуанин', 'Цитозин', 'Тимин'):
    count = s.count(word[0])
    print(word + ':', count)

# Джим Хоппер с помощью радиоприёмника пытается получить сообщение Оди. На приёмник ему поступает n
# различных последовательностей кода Морзе. Декодировав их, он получает последовательности из цифр и букв
# строчного латинского алфавита. При этом только в сообщениях Оди содержится число 11, причём минимум
# 3 раза. Помогите определить Джиму количество сообщений от Оди.
n = int(input())
counter = 0
for i in range(n):
    s = input()
    if s.count('11') >= 3:
        counter += 1
print(counter)

summ = 0  # Счётчик входов переменной sos
n = int(input())  # Кол-во сигналов
sos = '11'   # Сигнал sos в посланиях/messages
messages = [input() for i in range(n)]  # Список посланий
for i in messages:  # i пробегает список посланий
    if i.count(sos) > 2:  # Если включений sos в послании больше 2
        summ += 1  # То счетчик увеличивается на 1 (+ 1 послание sos)
print(summ)

# На вход программе подаётся строка текста. Напишите программу, которая подсчитывает количество цифр
# в данной строке.
s = input()
count = 0
for i in range(len(s)):
    if s[i] in '0123456789':
        count += 1
print(count)

s = input()  # получаем строку
counter = 0  # заводим счётчик для цифр
for i in range(10):  # вводим цикл for, i принимает значения от 0 до 9
    counter += s.count(str(i))  # если в строке s содержится цифра i, +1 к счетчику
print(counter)  # выводим счетчик

s = input()
c = 0
for i in range(10):
    for j in range(len(s)):
        if str(i) == s[j]:
            c += 1
print(c)

# На вход программе подаётся строка текста. Напишите программу, которая проверяет,
# что строка заканчивается подстрокой .com или .ru.
s = input()
st = s.endswith('.com')
st2 = s.endswith('.ru')
if st or st2:
    print('YES')
else:
    print('NO')

s = input()
if s.endswith(".com") or s.endswith(".ru"):
    print("YES")
else:
    print("NO")

s = input()
if s.endswith(('.com', '.ru')):
    print('YES')
else:
    print('NO')

# На вход программе подаётся строка текста. Напишите программу, выводит на экран символ,
# который появляется наиболее часто.
s = input()
often = 0
mx = 0
for i in s:  # перебираем все символы в строке
    if s.count(i) >= often:  # если количество данного символа в строке увеличивается
        often = s.count(i)  # он записывается в переменную often
        mx = i  # переменной mx присваивается значение наиболее частого символа
print(mx)

s = input()
most_common = s[0]
for c in s:
    if s.count(c) >= s.count(most_common):
        most_common = c
print(most_common)

a = input()  # Считываем строку
mx = 0  # Переменная для подсчета самого частого символа
b = 0  # Переменная для перезаписи частого символа, если таких несколько. Будет учитываться последний
for i in a:
    if a.count(i) >= mx:  # Через цикл считываем количество каждого символа в строке
        mx = a.count(i)  # Находим самый частый символ
        b = i  # Записываем его в переменную и переписываем, если таких символов несколько
print(b)

# На вход программе подаётся строка текста. Если в этой строке буква «f» встречается только один раз,
# выведите её индекс. Если она встречается два и более раза, выведите индексы её первого и последнего
# вхождения на одной строке, разделённые символом пробела. Если буква «f» в данной строке не встречается,
# следует вывести «NO» (без кавычек).
text = input()  # Получаем строку от пользователя
first_f = text.find('f')  # Находим индекс первого вхождения 'f'
if first_f == -1:  # Если 'f' не найдена (find возвращает -1)
    print("NO")
else:
    last_f = text.rfind('f')  # Находим индекс последнего вхождения 'f'
    if first_f == last_f:  # Если первое и последнее вхождения - это одно и то же
        print(first_f)
    else:
        print(first_f, last_f)  # Выводим оба индекса, разделенные пробелом

s = input()
cnt = s.count("f")
if cnt == 0:
    print("NO")
elif cnt == 1:
    print(s.index("f"))
else:
    print(s.index("f"), s.rindex("f"))

s = input()
a = s.find('f')
b = s.rfind('f')
if a < b:
    print(a, b)
elif a > -1:
    print(a)
else:
    print('NO')

# На вход программе подаётся строка текста, в которой буква «h» встречается минимум два раза.
# Напишите программу, которая удаляет из этой строки первое и последнее вхождение буквы «h»,
# а также все символы, находящиеся между ними.
s = input()  # вводим текст
c = s.find('h')  # находим индекс первого вхождения 'h'
t = s.rfind('h')  # находим индекс последнего вхождения 'h'
k = s[c:t+1]  # создаем подстроку k с первого вхождения h до последнего.
print(s.replace(k, ''))  # заменяем подстроку на символ пустой строки

s = input()
first = s.find("h")  # находим индекс первого вхождения 'h'
last = s.rfind("h")  # находим индекс последнего вхождения 'h'
res = s[:first] + s[last+1:]  # складываем полученные подстроки(конкатенация)
print(res)

