i = 5
while i <= 12:
    print('Python awesome!')
    i += 1

# На вход программе подаётся последовательность слов, каждое слово на отдельной строке.
# Концом последовательности является слово «КОНЕЦ» (без кавычек). При этом само слово «КОНЕЦ»
# не входит в последовательность, лишь символизируя её окончание. Напишите программу,
# которая выводит члены данной последовательности.
text = input()
while text != 'КОНЕЦ':
    print(text)
    text = input()

# На вход программе подаётся последовательность слов, каждое слово на отдельной строке.
# Концом последовательности является слово «КОНЕЦ» или «конец» (без кавычек).
# При этом сами слова «КОНЕЦ» и «конец» не входят в последовательность, лишь символизируя её окончание.
# Напишите программу, которая выводит члены данной последовательности.
text = input()
while text != 'КОНЕЦ' and text != 'конец':
    print(text)
    text = input()

word = input()
while not (word == "КОНЕЦ" or word == "конец"):
    print(word)
    word = input()

text = input()
while text not in ('КОНЕЦ', 'конец'):
    print(text)
    text = input()

# На вход программе подаётся последовательность слов, каждое слово на отдельной строке.
# Концом последовательности является одно из трёх слов: «стоп», «хватит», «достаточно» (без кавычек).
# Сами эти слова в последовательность не входят, лишь символизируя её окончание.
# Напишите программу, которая выводит общее количество членов данной последовательности.
count = 0
text = input()
while text not in ('стоп', 'хватит', 'достаточно'):
    count += 1
    text = input()
print(count)

# На вход программе подаётся последовательность целых чисел делящихся на 7, каждое число на отдельной строке.
# Концом последовательности является любое число, которое не делится на 7 без остатка.
# Напишите программу, которая выводит члены данной последовательности.
x = int(input())
while x % 7 == 0:
    print(x)
    x = int(input())

# На вход программе подаётся последовательность целых чисел, каждое число на отдельной строке.
# Признаком окончания последовательности является любое отрицательное число, при этом в саму
# последовательность оно не входит. Напишите программу, которая выводит сумму всех членов данной
# последовательности.
x = int(input())
t = 0
while x >= 0:
    t += x  # В блоке цикла сначала считывается счетчик, а потом вводимые числа.
    x = int(input())
print(t)

# На вход программе подаётся последовательность целых чисел от 1 до 5, характеризующее оценку ученика,
# каждое число на отдельной строке. Концом последовательности является любое неположительное число либо число,
# большее 5. Напишите программу, которая выводит количество пятерок.
count = 0
x = int(input())
while 0 < x < 6:
    if x == 5:
        count += 1  # счетчик всегда впереди в блоке цикла, перед вводом!
    x = int(input())
print(count)

#  Всем известно, что ведьмак способен одолеть любых чудовищ, однако его услуги обойдутся недешево.
#  К тому же ведьмак не принимает купюры, он принимает только чеканные монеты.
#  В мире ведьмака существуют монеты с номиналами 1,5,10,25. Напишите программу, которая определяет,
#  какое минимальное количество чеканных монет нужно заплатить ведьмаку.
count = 0
x = int(input())
while x >= 25:  # пока число больше 25
    count += 1  # прибавляем одну монетку
    x = x - 25  # от исходного введенного числа отнимаем монетку ценой в 25
while 25 > x >= 10:  # пока число 10 и больше
    count += 1  # прибавляем одну монетку
    x = x - 10  # отнимаем от исходного оставшегося числа монетку в 10
while 10 > x >= 5:  # если оставшееся число меньше, переходим к следующему пункту алгоритма
    count += 1  # в каждом пункте добавляем столько единиц в счетчике, сколько помещается монеток
    x = x - 5
while 5 > x >= 1:
    count += 1
    x = x - 1
print(count)
# пока цена больше 25
# отнимаем по 25
# пока больше 10
# отнимаем по 10 и тд

price = int(input())
coins = 0
# отсчитываем монеты номиналом по 25
coins += price // 25
price %= 25
# отсчитываем монеты номиналом по 10
coins += price // 10
price %= 10
# отсчитываем монеты номиналом по 5
coins += price // 5
price %= 5
# отсчитываем монеты номиналом по 1
coins += price // 1
price %= 1
print(coins)

# код покажет число 120
num = 12345
product = 1
while num != 0:
    last_digit = num % 10
    # 1)12345%10=5      2)1234%10=4     3)123%10=3    4)12%10=2   5)1%10=1
    product = product * last_digit
    # 1)1*5=5           2)5*4=20        3)20*3=60     4)60*2=120  5)120*1=120
    num = num // 10
    # 1)12345//10=1234  2)1234//10=123  3)123//10=12  4)12//10=1  5)1//10=0
print(product)

# код покажет число 5
num = 123456789
total = 0
while num != 0:
    last_digit = num % 10
    if last_digit > 4:
        total += 1
    num = num // 10
print(total)

# Дано натуральное число. Напишите программу, которая выводит его цифры в столбик в обратном порядке.
num = int(input())
while num != 0:   # пока в числе есть цифры
    last_digit = num % 10  # получить последнюю цифру
    print(last_digit)  # код обработки последней цифры(выводим последнюю цифру)
    num = num // 10  # удалить последнюю цифру из числа
    # цикл возобновляется снова, пока переберет все цифры

for i in input()[::-1]:
    print(i)

print(*reversed(input()), sep='\n')

# Дано натуральное число. Напишите программу, которая меняет порядок цифр числа на обратный.
num = int(input())
while num != 0:
    last_digit = num % 10
    print(last_digit, end='')
    num = num // 10

x, y = int(input()), 0
while x != 0:
    y = y * 10 + x % 10
    x = x // 10
print(y)

n = int(input())
a = ''
while n > 0:
    numbr = n % 10
    a = str(a) + str(numbr)
    n = n // 10
print(a)

# Дано натуральное число n(n≥10). Напишите программу, которая определяет его
# максимальную и минимальную цифры.
n = int(input())
x = str(n)
a = max(x)
b = min(x)
print('Максимальная цифра равна',a)
print('Минимальная цифра равна',b)

n = int(input())
minimum = 9
maximum = 0
while n != 0:
    last_digit = n % 10
    if last_digit < minimum:
        minimum = last_digit
    if last_digit > maximum:
        maximum = last_digit
    n = n // 10
print('Максимальная цифра равна', maximum)
print('Минимальная цифра равна', minimum)

num = int(input())
largest = num % 10
smallest = num % 10
while num != 0:
    last_num = num % 10
    if last_num > largest:
        largest = last_num
    if last_num < smallest:
        smallest = last_num
    num = num // 10
print('Максимальная цифра равна', largest)
print('Минимальная цифра равна', smallest)

n = int(input())
mx_digit = 0
mn_digit = 9
while n != 0:
    last_digit = n % 10
    mx_digit = max(mx_digit, last_digit)
    mn_digit = min(mn_digit, last_digit)
    n //= 10
print('Максимальная цифра равна', mx_digit)
print('Минимальная цифра равна', mn_digit)

n = int(input())
smallest = n % 10  # наименьшее определяем как счетчик от последней цифры числа
largest = n % 10  # # наибольшее определяем как счетчик от последней цифры числа
while n != 0:  # пока в переменной есть цифры
    if n % 10 > largest:  # если последняя цифра больше наибольшей
         largest = n % 10  # она становится наибольшей
    elif n % 10 < smallest:  # если последняя цифра меньше предыдущей наименьшей
         smallest = n % 10  # она становится наименьшей
    n = n // 10
print('Максимальная цифра равна', largest)
print('Минимальная цифра равна', smallest)

# Дано натуральное число. Напишите программу, которая вычисляет:
n = int(input())
total = 0  # количество цифр
count = 0  # сумма цифр
mng = 1  # произведение цифр
last_digit = None  # создаем переменную вне цикла заранее
last = n % 10  # последняя цифра числа(правая)
while n != 0:  # пока в переменной есть цифры
    last_digit = n % 10  # получить последнюю цифру
    total += 1  # увеличиваем счётчик цифр
    count += last_digit  # добавляем цифру в сумму
    mng *= last_digit  # умножаем на цифру
    n = n // 10  # отбрасываем последнюю цифру
print(count)  # сумму его цифр
print(total)  # количество цифр в нем
print(mng)  # произведение его цифр
print(count / total)  # среднее арифметическое его цифр
print(last_digit)  # его первую цифру
print(last + last_digit)  # сумму его первой и последней цифры

# объявляем переменные
n = int(input())
num = n  # уменьшаемый остаток для получения "стоп" в цикле
total = 0  # сумма чисел
product = 1  # произведение чисел
count = 0  # количество чисел

# делаем цикл
while num:
    total += num % 10  # считаем суму чисел
    product *= num % 10  # считаем произведение чисел
    count += 1  # считаем количество чисел
    num //= 10  # откидывает последнее число

# выводим ответы
print(total)  # сумма чисел
print(count)  # количество чисел
print(product)  # произведение чисел
print(total / count)  # среднее.
print(n // 10 ** (count - 1))  # первое число
print(n // 10 ** (count - 1) + n % 10)  # произведение первого и последнего чисел

# Дано натуральное число n(n>9). Напишите программу, которая определяет его вторую (с начала) цифру.
n = int(input())
second_digit = None  # вводим переменную второе число(вне цикла, заранее)
while n > 9:  # пока число больше 9
    last_digit = n % 10  # находим последнюю цифру
    n = n // 10  # отбрасываем последнюю цифру
    second_digit = last_digit  # присваиваем переменной второго числа значение последней цифры
print(second_digit)  # цикл заканчивается двузначным числом, его остаток и будет второй цифрой в числе

n = int(input())
while n > 99:
    n //= 10
second_digit = n % 10
print(second_digit)

print(input()[1])

# Дано натуральное число. Напишите программу, которая определяет, состоит ли указанное число
# из одинаковых цифр.
n = int(input())
largest = n % 10
smallest = n % 10
while n != 0:
    last_digit = n % 10
    if last_digit > largest:
        largest = last_digit
    elif last_digit < smallest:
        smallest = last_digit
    n = n // 10
if largest == smallest:  # сравниваем наибольшее и наименьшее: если равны, то все цифры числа одинаковы.
    print('YES')
else:
    print('NO')

n = int(input())
flag = "YES"  # сигнальный флаг изначально установлен "YES"
last_digit = n % 10  # дана последняя цифра числа
while n > 0:
    cur_digit = n % 10
    if last_digit != cur_digit:  # последняя цифра не равна любой цифре числа пока продолжается цикл.
        flag = "NO"  # сигнальный флаг "NO"
    n //= 10
print(flag)

# Дано натуральное число. Напишите программу, которая определяет, является ли
# последовательность его цифр при просмотре справа налево упорядоченной по не убыванию.
n = int(input())
flag = 'YES'
last_digit = n % 10
while n != 0:
    second_digit = n % 10  # меняем значение second_digit на последнюю цифру числа "n"
    if last_digit > second_digit:  # сравниваем последнюю цифру и second_digit, если она больше
        flag = 'NO'
    else:
        last_digit = second_digit
    n = n // 10
print(flag)

n = int(input())
while n % 10 <= n // 10 % 10:
    n //= 10
print("YES" if n < 10 else "NO")

n = int(input())
flag = True
while n > 9:
    x = n % 10 #  последнее число
    y = n % 100 // 10 #  предпоследнее число
    if y < x:
        flag = False
    n //= 10
print("YES" if flag == True else "NO")



